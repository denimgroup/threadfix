////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2016 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.plugin.eclipse.rest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.denimgroup.threadfix.data.entities.VulnerabilityMarker;
import com.denimgroup.threadfix.plugin.eclipse.util.EclipsePropertiesManager;
import com.denimgroup.threadfix.remote.PluginClient;

public class VulnerabilityMarkerService {

	public static List<VulnerabilityMarker> getMarkers() {
		List<VulnerabilityMarker> outerList = new ArrayList<VulnerabilityMarker>();
		
		for (String appId : EclipsePropertiesManager.getConfiguredApplications()) {
			outerList.addAll(getMarkers(appId));
		}
		
		return outerList;
	}
	
	private static List<VulnerabilityMarker> getMarkers(String appId) {
		List<VulnerabilityMarker> markers = new ArrayList<VulnerabilityMarker>();
		
		PluginClient client = new PluginClient(EclipsePropertiesManager.INSTANCE);
		
		VulnerabilityMarker[] markerArray = client.getVulnerabilityMarkers(appId);
		
		if (markerArray != null) {
			markers.addAll(Arrays.asList(markerArray));
		}
		
		return markers;
	}

}
