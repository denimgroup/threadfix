<%@ include file="/common/taglibs.jsp"%>

<head>
    <title>Vulnerability Details</title>
    <cbs:cachebustscript src="/scripts/vulnerability-detail-page-controller.js"/>
    <cbs:cachebustscript src="/scripts/document-form-controller.js"/>
    <cbs:cachebustscript src="/scripts/upload-scan-controller.js"/>
    <cbs:cachebustscript src="/scripts/modal-controller-with-config.js"/>
    <cbs:cachebustscript src="/scripts/defect-submission-modal-controller.js"/>
    <cbs:cachebustscript src="/scripts/add-to-existing-defect-controller.js"/>
    <cbs:cachebustscript src="/scripts/grc-control-submission-modal-controller.js"/>
    <cbs:cachebustscript src="/scripts/modal-controller-with-config.js"/>
    <cbs:cachebustscript src="/scripts/vuln-operations-controller.js"/>
</head>

<body id="apps" ng-controller="VulnerabilityDetailPageController" ng-init="isShowInfo = false; toggleBtnText = 'Toggle More Info'">
<%@ include file="/WEB-INF/views/angular-init.jspf"%>
<%@ include file="/WEB-INF/views/applications/forms/vulnCommentForm.jsp"%>
<%@ include file="/WEB-INF/views/applications/forms/uploadDocForm.jsp" %>
<%@ include file="/WEB-INF/views/defects/submitDefectForm.jsp" %>
<%@ include file="/WEB-INF/views/applications/modals/submitGRCControl.jsp" %>
<%@ include file="/WEB-INF/views/defects/addToExistingDefectForm.jsp" %>

<spring:url value="/organizations/{orgId}" var="teamUrl">
    <spring:param name="orgId" value="${ vulnerability.application.organization.id }" />
</spring:url>
<spring:url value="/organizations/{orgId}/applications/{applicationId}" var="applicationUrl">
    <spring:param name="orgId" value="${ vulnerability.application.organization.id }" />
    <spring:param name="applicationId" value="${ vulnerability.application.id }" />
</spring:url>

<ul class="breadcrumb">
    <li><a href="<spring:url value="/teams"/>">Applications Index</a> <span class="divider">/</span></li>
    <li><a href="${ fn:escapeXml(teamUrl) }">Team: <c:out value="${ vulnerability.application.organization.name }"/></a> <span class="divider">/</span></li>
    <li><a href="${ fn:escapeXml(applicationUrl) }">Application: <c:out value="${ vulnerability.application.name }"/></a> <span class="divider">/</span></li>
    <li class="active">Vulnerability {{ vulnId }}</li>
</ul>

<h2>Vulnerability Details
	<span style="font-size:10pt;">
		<a class="btn  header-button" ng-click="showInfo()" id="toggleMoreInfoButton">{{ toggleBtnText }}</a>
	</span>
	<span style="font-size:10pt;">
		<div class="btn-group" ng-controller="VulnOperationsController">
		    <button ng-hide="submitting" id="actionItems" class="btn dropdown-toggle" data-toggle="dropdown" type="button">
		        Action <span class="caret"></span>
		    </button>
		    <ul class="dropdown-menu">
		    <c:if test="${ canModifyVulnerabilities }">
		            <c:if test="${ vulnerability.active and not vulnerability.hidden }">
		                <spring:url
		                        value="../../../applications/{applicationId}/vulnerabilities/{vulnerabilityId}/close"
		                        var="closeUrl">
		                    <spring:param name="applicationId"
		                                  value="${ vulnerability.application.id }" />
		                    <spring:param name="vulnerabilityId" value="${ vulnerability.id }" />
		                </spring:url>
		                <li><a id="closeVulnerabilityLink" href="${ fn:escapeXml(closeUrl) }">Close Vulnerability</a></li>
		            </c:if>
		            <c:if test="${ not vulnerability.active and not vulnerability.hidden }">
		                <spring:url
		                        value="../../../applications/{applicationId}/vulnerabilities/{vulnerabilityId}/open"
		                        var="closeUrl">
		                    <spring:param name="applicationId"
		                                  value="${ vulnerability.application.id }" />
		                    <spring:param name="vulnerabilityId" value="${ vulnerability.id }" />
		                </spring:url>
		                <li><a id="openVulnerabilityLink" href="${ fn:escapeXml(closeUrl) }">Open Vulnerability</a></li>
		            </c:if>
		            <c:if test="${ not vulnerability.isFalsePositive }">
		                <spring:url
		                        value="../../../applications/{applicationId}/vulnerabilities/{vulnerabilityId}/markFalsePositive"
		                        var="closeUrl">
		                    <spring:param name="applicationId"
		                                  value="${ vulnerability.application.id }" />
		                    <spring:param name="vulnerabilityId" value="${ vulnerability.id }" />
		                </spring:url>
		                <li><a id="markFalsePositiveLink" href="${ fn:escapeXml(closeUrl) }">Mark as False Positive</a></li>
		            </c:if>
		            <c:if test="${ vulnerability.isFalsePositive }">
		                <spring:url
		                        value="../../../applications/{applicationId}/vulnerabilities/{vulnerabilityId}/markNotFalsePositive"
		                        var="closeUrl">
		                    <spring:param name="applicationId"
		                                  value="${ vulnerability.application.id }" />
		                    <spring:param name="vulnerabilityId" value="${ vulnerability.id }" />
		                </spring:url>
		                <li><a id="unmarkFalsePositiveLink" href="${ fn:escapeXml(closeUrl) }">Unmark False Positive</a></li>
		            </c:if>
		            <c:if test="${ not empty vulnerability.defect }">
		                <spring:url value="../../../applications/{applicationId}/vulnerabilities/{vulnerabilityId}/defect" var="defectUrl">
		                    <spring:param name="applicationId" value="${ vulnerability.application.id }"/>
		                    <spring:param name="vulnerabilityId" value="${ vulnerability.id }"/>
		                </spring:url>
		                <li><a id="viewDefectLink" href="${ fn:escapeXml(defectUrl) }">View Defect</a></li>
		            </c:if>
		            <c:if test="${ canSubmitDefects && (empty vulnerability.defect) }">
		                <li ng-show="vulnerability.app.defectTracker"><a class="pointer" ng-click="showSubmitDefectModal()">Create Defect</a></li>
		                <li ng-show="vulnerability.app.defectTracker"><a class="pointer" ng-click="showMergeDefectModal()">Add to Existing Defect</a></li>
		            </c:if>
		    </c:if>
		    </ul>
		</div>
    </span>
</h2>

<div id="helpText">
    This page lists information about a specific Vulnerability.
</div>

<div id="statisticsDiv" class="container-fluid" ng-show="isShowInfo">
    <div class="row-fluid">
        <div class="span6">
            <h4>Attack Surface</h4>

            <table class="dataTable">
                <tr>
                    <td class="bold">Host</td>
                    <td id="host" class="inputValue">{{ surfaceLocation.host }}</td>
                </tr>
                <tr>
                    <td class="bold">Path</td>
                    <td id="path" class="inputValue">{{ surfaceLocation.path }}</td>
                </tr>
                <tr>
                    <td class="bold">Protocol</td>
                    <td id="protocol" class="inputValue">{{ surfaceLocation.protocol }}</td>
                </tr>
                <tr>
                    <td class="bold">Port</td>
                    <td id="port" class="inputValue" ng-show="surfaceLocation.port !== -1">{{ surfaceLocation.port }}</td>
                </tr>
                <tr>
                    <td class="bold">Query</td>
                    <td id="query" class="inputValue">{{ surfaceLocation.query }}</td>
                </tr>
                <tr>
                    <td class="bold">Parameter</td>
                    <td id="parameter" class="inputValue">{{ surfaceLocation.parameter }}</td>
                </tr>
            </table>
        </div>
        <div class="span6">
            <c:if test="${not empty timeArray}">
                <h4>Status History</h4>
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th class="first">Event</th>
                        <th class="middle">Date</th>
                        <th class="last"># Days</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr class="bodyRow">
                        <td>Opened</td>
                        <td id="vulnOpenTime"><fmt:formatDate value="${ vulnerability.openTime.time }"
                                                              type="both" dateStyle="short" timeStyle="medium" /></td>
                        <td><c:out value="${timeArray[0]}" /></td>
                    </tr>
                    <tr class="bodyRow">
                        <td>WAF rule generated</td>
                        <td id="vulnWafRuleTime"><fmt:formatDate
                                value="${ vulnerability.wafRuleGeneratedTime.time }" type="both"
                                dateStyle="short" timeStyle="medium" /></td>
                        <td><c:out value="${timeArray[1]}" /></td>
                    </tr>
                    <tr class="bodyRow">
                        <td>Submitted to tracker</td>
                        <td id="vulnDefectSubmittedTime"><fmt:formatDate
                                value="${ vulnerability.defectSubmittedTime.time }" type="both"
                                dateStyle="short" timeStyle="medium" /></td>
                        <td><c:out value="${timeArray[2]}" /></td>
                    </tr>
                    <tr class="bodyRow">
                        <td>Marked as closed by tracker</td>
                        <td id="vulnClosedInTrackerTime"><fmt:formatDate
                                value="${ vulnerability.defectClosedTime.time }" type="both"
                                dateStyle="short" timeStyle="medium" /></td>
                        <td><c:out value="${timeArray[3]}" /></td>
                    </tr>
                    <tr class="bodyRow">
                        <td><c:choose>
                            <c:when test="${vulnerability.foundByScanner}">Found closed by scanner</c:when>
                            <c:otherwise>Marked closed</c:otherwise>
                        </c:choose></td>
                        <td id="vulnCloseTime"><fmt:formatDate value="${ vulnerability.closeTime.time }"
                                                               type="both" dateStyle="short" timeStyle="medium" /></td>
                        <td><c:out value="${timeArray[4]}" /></td>
                    </tr>
                    </tbody>
                </table>
            </c:if>
        </div>
    </div>
</div>

<%@ include file="/WEB-INF/views/successMessage.jspf" %>
<%@ include file="/WEB-INF/views/errorMessage.jspf"%>
<%@ include file="/WEB-INF/views/scans/finding/editManualFindingForm.jsp" %>

<h4>Basic Information</h4>
<table class="table">
    <thead>
    <tr>
        <th>
            Type
        </th>
        <th>
            Severity
        </th>
        <th ng-hide="vulnerability.originalFinding.dependency">
            Path
        </th>
        <th ng-hide="vulnerability.originalFinding.dependency">
            Parameter
        </th>
        <th ng-show="vulnerability.originalFinding.dependency">
            Reference
        </th>
    </tr>
    </thead>
    <tr class="bodyRow" ng-class="{
                        error: vulnerability.genericSeverity.name === 'Critical',
                        warning: vulnerability.genericSeverity.name === 'High',
                        success: vulnerability.genericSeverity.name === 'Medium',
                        info: vulnerability.genericSeverity.name === 'Info' || vulnerability.genericSeverity.name === 'Low'
                        }">
        <td id="type">
            {{ vulnerability.vulnerabilityName }}
            (<a id="cweLink" href="http://cwe.mitre.org/data/definitions/{{ vulnerability.genericVulnerability.displayId }}.html" target="_blank">CWE Entry</a>)

        </td>
        <td id="severity">{{ vulnerability.genericSeverity.name }}</td>
        <td ng-hide="vulnerability.originalFinding.dependency">{{ vulnerability.path }}</td>
        <td ng-hide="vulnerability.originalFinding.dependency">{{ vulnerability.parameter }}</td>
        <td ng-show="vulnerability.originalFinding.dependency">
            {{ vulnerability.originalFinding.dependency.refId }}
            (<a target="_blank" id="linkCve" href="{{ vulnerability.originalFinding.dependency.refLink }}">View</a>)
        </td>
    </tr>
</table>

<c:set var="editVisible" value="false"/>

<c:forEach var="finding" items="${ vulnerability.findings }">
    <c:if test="${ finding.scan.applicationChannel.channelType.name == 'Manual'}">
        <c:set var="editVisible" value="true"/>
    </c:if>
</c:forEach>

<div ng-show="findings">
    <h4>Findings</h4>
    <table class="table table-striped sortable" id="2" style="table-layout:fixed;">
        <thead>
        <tr>
            <th class="first">Scanner Name</th>
            <th>Severity</th>
            <th>Vulnerability Type</th>
            <th ng-hide="vulnerability.originalFinding.dependency">Path</th>
            <th ng-hide="vulnerability.originalFinding.dependency">
                Calculated URL Path
            </th>
            <th ng-hide="vulnerability.originalFinding.dependency">
                Calculated Source Path
            </th>
            <th ng-hide="vulnerability.originalFinding.dependency">Parameter</th>
            <th ng-hide="vulnerability.originalFinding.dependency">Native ID</th>
            <th ng-show="vulnerability.originalFinding.dependency">
                Reference
            </th>
            <c:if test="${ editVisible }">
                <th style="text-align: center">Edit</th>
            </c:if>
            <th style="width:80px"></th>
        </tr>
        </thead>
        <tbody>
        <tr ng-repeat="finding in findings" class="bodyRow" ng-class="{
                    error: finding.channelSeverity.numericValue === 5,
                    warning: finding.channelSeverity.numericValue === 4,
                    success: finding.channelSeverity.numericValue === 3,
                    info: finding.channelSeverity.numericValue === 2 || finding.channelSeverity.numericValue === 1
                    }">
            <td id="scannerName{{ $index }}">{{ finding.scannerName }}</td>
            <td id="severityName{{ $index }}">{{ finding.channelSeverity.name }}</td>
            <td id="vulnName{{ $index }}" style="word-wrap: break-word;">{{ finding.channelVulnerability.name }}</td>
            <td ng-hide="vulnerability.originalFinding.dependency" id="path{{ $index }}" style="max-width:100px;word-wrap: break-word;">{{ finding.surfaceLocation.path }}</td>
            <td ng-hide="vulnerability.originalFinding.dependency" id="pathRoot{{ $index }}" style="max-width:100px;word-wrap: break-word;">{{ finding.calculatedUrlPath }}</td>
            <td ng-hide="vulnerability.originalFinding.dependency" id="sourceRoot{{ $index }}" style="max-width:175px;word-wrap: break-word;">{{ finding.calculatedFilePath }}</td>
            <td ng-hide="vulnerability.originalFinding.dependency" id="parameter{{ $index }}">{{ finding.surfaceLocation.parameter }}</td>
            <td ng-hide="vulnerability.originalFinding.dependency" id="displayId{{ $index }}" style="max-width:125px;word-wrap: break-word;" >{{ finding.displayId ? finding.displayId : finding.nativeId }}</td>
            <td ng-show="vulnerability.originalFinding.dependency" id="cve{{ $index }}">
                {{ finding.dependency.refId }}
                (<a target="_blank" id="linkCve{{ $index }}" href="{{ finding.dependency.refLink }}">View</a>)
            </td>
            <td ng-show = "finding.scannerName === 'Manual'" style="text-align: center">
                <a id="editLink" ng-click="openEditFindingModal(finding)" class="pointer">Edit</a>
            </td>
            <td>
                <a id="viewLink" ng-click="goToFinding(finding)" class="pointer">View Finding</a>
            </td>
        </tr>
        </tbody>
    </table>

    <%@ include file="/WEB-INF/views/vulnerabilities/vulnRequestResponseAttacks.jsp" %>
</div>

<div ng-show="links">
    <h4>External Links</h4>
    <span ng-repeat="link in links">
        {{ link.scannerName }}: <a ng-href="{{ link.urlReference }}">{{ link.urlReference }}</a>
    </span>
</div>

<div ng-show="staticFindingList">
    <h4>Data Flow Variants</h4>
    <div ng-repeat="finding in staticFindingList" ng-show="finding.dataFlowElements">
        <a class="pointer" ng-click="toggleFinding(finding)">Toggle
            finding {{ finding.id }} data flow (Elements: {{ finding.dataFlowElements.length }})
        </a>
        <br />

        <div id='{{ finding.id }}' ng-show="isShowFlow{{finding.id}}">
            <h4>
                Finding
                {{ finding.id }}
                Data Flow
            </h4>
            <div ng-repeat="dataFlowElement in finding.dataFlowElements">
                <table class="dataTable">
                    <tr>
                        <td>File Name</td>
                        <td class="inputValue">{{ dataFlowElement.sourceFileName }}</td>
                    </tr>
                    <tr>
                        <td>{{ dataFlowElement.lineNumber }}</td>
                        <td class="inputValue"><pre>{{ dataFlowElement.lineText }}</pre></td>
                    </tr>
                    <tr>
                        <td></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

<div ng-show="singleStaticFinding.dataFlowElements">
    <h4>Data Flow</h4>
    <div ng-repeat="dataFlowElement in singleStaticFinding.dataFlowElements">
        <table class="dataTable">
            <tr>
                <td colspan="2" class="inputValue">{{ dataFlowElement.sourceFileName }} line {{ dataFlowElement.lineNumber }}</td>
            </tr>
            <tr>
                <td class="inputValue"><pre>{{ dataFlowElement.lineText }}</pre></td>
            </tr>
            <tr>
                <td></td>
            </tr>
        </table>
    </div>
</div>

<br/>

<h4>Comments</h4>
<%@ include file="/WEB-INF/views/applications/vulnComments.jsp" %>
<c:if test="${ canModifyVulnerabilities || canSubmitComments }">
    <a class="btn" ng-click="openCommentModal()">Add Comment</a>
</c:if>

<br/>

<div ng-controller="DocumentFormController">
    <h4>Files</h4>
    <%@ include file="/WEB-INF/views/applications/docsTable.jsp" %>
    <c:if test="${ canModifyVulnerabilities }">
        <a id="uploadDocVulnModalLink" class="btn" ng-click="showUploadForm()">Add File</a>
    </c:if>
</div>
</body>