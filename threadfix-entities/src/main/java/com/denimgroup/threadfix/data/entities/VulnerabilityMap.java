////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2016 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.data.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;

@Entity
@Table(name = "VulnerabilityMap")
public class VulnerabilityMap extends BaseEntity {

	private static final long serialVersionUID = -6597715880814368634L;

	private GenericVulnerability genericVulnerability;
	private ChannelVulnerability channelVulnerability;
	private boolean mappable;

	@ManyToOne
	@JoinColumn(name = "genericVulnerabilityId")
	public GenericVulnerability getGenericVulnerability() {
		return genericVulnerability;
	}

	public void setGenericVulnerability(GenericVulnerability genericVulnerability) {
		this.genericVulnerability = genericVulnerability;
	}

	@ManyToOne
	@JoinColumn(name = "channelVulnerabilityId")
	@JsonIgnore
	public ChannelVulnerability getChannelVulnerability() {
		return channelVulnerability;
	}

	public void setChannelVulnerability(ChannelVulnerability channelVulnerability) {
		this.channelVulnerability = channelVulnerability;
	}

	@Column(nullable = false)
	@JsonIgnore
	public boolean isMappable() {
		return mappable;
	}

	public void setMappable(boolean mappable) {
		this.mappable = mappable;
	}
}
