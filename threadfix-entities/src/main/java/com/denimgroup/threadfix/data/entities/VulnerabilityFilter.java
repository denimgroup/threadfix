////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2016 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.data.entities;

import com.denimgroup.threadfix.data.interfaces.MultiLevelFilter;
import com.fasterxml.jackson.annotation.JsonView;

import javax.persistence.*;

@Entity
@Table(name = "VulnerabilityFilter")
public class VulnerabilityFilter extends AuditableEntity implements MultiLevelFilter {

	private static final long serialVersionUID = -6220937810809030699L;
	
	private GenericVulnerability sourceGenericVulnerability = null;
	private GenericSeverity targetGenericSeverity = null;
	private boolean global = false, hide = false;
	private Application application = null;
	private Organization organization = null;

	@Column
	public boolean getGlobal() {
		return global;
	}

	public void setGlobal(boolean global) {
		this.global = global;
	}

	@ManyToOne
	@JoinColumn(name = "applicationId")
	public Application getApplication() {
		return application;
	}

	public void setApplication(Application application) {
		this.application = application;
	}
	
	@ManyToOne
	@JoinColumn(name = "organizationId")
	public Organization getOrganization() {
		return organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}

	@Column
	@JsonView(Object.class)
	public boolean getHide() {
		return hide;
	}

	public void setHide(boolean hide) {
		this.hide = hide;
	}

	@ManyToOne
	@JoinColumn(name = "genericSeverityId")
	@JsonView(Object.class)
	public GenericSeverity getTargetGenericSeverity() {
		return targetGenericSeverity;
	}

	public void setTargetGenericSeverity(GenericSeverity targetGenericSeverity) {
		this.targetGenericSeverity = targetGenericSeverity;
	}

	@ManyToOne
	@JsonView(Object.class)
	@JoinColumn(name = "genericVulnerabilityId")
	public GenericVulnerability getSourceGenericVulnerability() {
		return sourceGenericVulnerability;
	}

	public void setSourceGenericVulnerability(
			GenericVulnerability sourceGenericVulnerability) {
		this.sourceGenericVulnerability = sourceGenericVulnerability;
	}
	
	@Override
	public String toString() {
		return sourceGenericVulnerability + " -> " + targetGenericSeverity;
	}
}
