////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2016 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.framework.impl.dotNetWebForm;

import org.junit.Test;

import java.io.File;
import java.util.Map;

import static com.denimgroup.threadfix.CollectionUtils.map;
import static com.denimgroup.threadfix.framework.ResourceManager.getDotNetWebFormsFile;
import static com.denimgroup.threadfix.framework.impl.dotNetWebForm.AspxUniqueIdParser.parse;

/**
 * Created by mac on 10/20/14.
 */
public class AspxUniqueIDParserTests {

    @Test
    public void testContosoPage() {
        AspxUniqueIdParser parser = parse(getDotNetWebFormsFile("StudentsAdd.aspx"));

        String[] params = {
                "ctl00$MainContent$StudentsDetailsView$ctl01",
                "ctl00$MainContent$StudentsDetailsView$ctl02",
                "ctl00$MainContent$StudentsDetailsView$ctl03"
        };

        for (String param : params) {
            assert parser.parameters.contains(param) : "Parameters didn't contain " + param + " : " + parser.parameters;
        }
    }

    @Test
    public void testAutogeneratedIdPage() {
        AspxUniqueIdParser parser = parse(getDotNetWebFormsFile("StudentsAddAutogeneratedId.aspx"));

        String[] params = {
                "ctl00$MainContent$ctl00$ctl01",
                "ctl00$MainContent$ctl00$ctl02",
                "ctl00$MainContent$ctl00$ctl03"
        };

        for (String param : params) {
            assert parser.parameters.contains(param) : "Parameters didn't contain " + param + " : " + parser.parameters;
        }
    }

    @Test
    public void testAutogeneratedIdWithUserControl() {

        File controlFile = getDotNetWebFormsFile("WebUserControl1.ascx");
        Map<String, AscxFile> controlMap = map("WebUserControl1", new AscxFile(controlFile));

        AspxUniqueIdParser parser = parse(getDotNetWebFormsFile("StudentsAddWithControl.aspx"), controlMap);

        String[] params = {
                "ctl00$MainContent$ctl00$ctl01",
                "ctl00$MainContent$ctl00$ctl02",
                "ctl00$MainContent$ctl00$ctl03",
                "ctl00$MainContent$ctl00$ctl04",
                "ctl00$MainContent$WebUserControl1$textColor",
                "ctl00$MainContent$WebUserControl1$DetailsView1$ctl01",
                "ctl00$MainContent$WebUserControl1$DetailsView1$ctl02",
                "ctl00$MainContent$WebUserControl1$DetailsView1$ctl03",
                "ctl00$MainContent$WebUserControl1$DetailsView1$ctl04"
        };

        for (String param : params) {
            assert parser.parameters.contains(param) : "Parameters didn't contain " + param + " : " + parser.parameters;
        }
    }

    @Test
    public void testParseMasterPage() {
        AspxUniqueIdParser parser = parse(getDotNetWebFormsFile("StudentsAdd.aspx"));

        assert parser.masterPage.equals("Site.Master") : "Master page wasn't ~/Site.Master, was " + parser.masterPage;
    }

}
